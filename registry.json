 {
  "name": "registry",
  "base_url": "https://registry.api.flow.io",   

  "imports": [
    { "uri": "http://www.apidoc.me/flow/common/0.0.12/service.json" }
  ],

   "unions": {
     "healthcheck": {
       "discriminator": "discriminator",
       "types": [
         { "type": "http" },
         { "type": "postgresql" }
       ]
     }
   },

  "models": {

    "service": {
      "description": "A service is used to identify what type of software is actually running. We use this to enable setting up application types with enough configuration info by default to support our use cases around docker, CI, etc. The name service comes from https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt",
      "fields": [
        { "name": "id", "type": "string", "example": "play" },
        { "name": "default_port", "type": "long", "example": "9000" }
      ]
    },

    "service_form": {
      "fields": [
        { "name": "id", "type": "string" },
        { "name": "default_port", "type": "long" }
      ]
    },

    "service_put_form": {
      "fields": [
        { "name": "default_port", "type": "long" }
      ]
    },

    "service_reference": {
      "fields": [
        { "name": "id", "type": "string", "example": "play" }
      ]
    },

    "service_version": {
      "fields": [
        { "name": "id", "type": "string" },
        { "name": "timestamp", "type": "date-time-iso8601" },
        { "name": "type", "type": "io.flow.common.v0.enums.change_type" },
        { "name": "service", "type": "service" }
      ]
    },

    "application": {
      "fields": [
        { "name": "id", "type": "string" },
        { "name": "ports", "type": "[port]", "description": "All of the ports assigned to this application" },
        { "name": "dependencies", "type": "[string]", "description": "A list of the direct dependencies of this application. Guaranteed to be non-cyclical over the set of all applications." }
      ]
    },

    "application_form": {
      "fields": [
        { "name": "id", "type": "string" },
        { "name": "service", "type": "string" },
        { "name": "external", "type": "long", "required": false, "description": "The external port number to allocate to this application. Defaults to a unique port assigned by the registry." },
        { "name": "internal", "type": "long", "required": false, "description": "The internal port number that this application runs on. Defaults to the service's default port number." },
        { "name": "dependency", "type": "[string]", "required": false, "description": "The application IDs on which this application is dependent" }
      ]
    },

    "application_put_form": {
      "fields": [
        { "name": "service", "type": "string", "required": false },
        { "name": "external", "type": "long", "required": false },
        { "name": "internal", "type": "long", "required": false },
        { "name": "dependency", "type": "[string]", "required": false }
      ]
    },

    "application_version": {
      "fields": [
        { "name": "id", "type": "string" },
        { "name": "timestamp", "type": "date-time-iso8601" },
        { "name": "type", "type": "io.flow.common.v0.enums.change_type" },
        { "name": "application", "type": "application" }
      ]
    },

    "http": {
      "fields": [
        { "name": "host", "type": "string" },
        { "name": "port", "type": "long", "description": "The port on which clients access this service." }
      ]
    },

    "port": {
      "fields": [
        { "name": "service", "type": "service_reference" },
        { "name": "external", "type": "long", "description": "The port on which clients access this service. If running in a container, this is the host port." },
        { "name": "internal", "type": "long", "description": "The port on which this service is running internally. If running in a container, this is the port inside the container." }
      ]
    },

    "postgresql": {
      "fields": [
        { "name": "dbname", "type": "string", "description": "The database name." },
        { "name": "host", "type": "string" },
        { "name": "port", "type": "long", "description": "The port on which clients access this database." },
        { "name": "user", "type": "string" }
      ]
    }
  },

  "resources": {
    "service": {
      "operations": [
        {
          "method": "GET",
          "description": "Search services. Always paginated.",
          "parameters": [
            { "name": "id", "type": "[string]", "required": false, "maximum": 100 },
            { "name": "limit", "type": "long", "default": 25, "minimum": 1, "maximum": 100 },
            { "name": "offset", "type": "long", "default": 0, "minimum": 0 },
            { "name": "sort", "type": "string", "default": "-created_at" }
          ],
          "responses": {
            "200": { "type": "[service]" }
          }
        },

        {
          "method": "GET",
          "description": "Provides visibility into recent changes of each service, including deletion",
          "path": "/versions",
          "parameters": [
            { "name": "id", "type": "[string]", "required": false, "maximum": 100 },
            { "name": "service", "type": "[string]", "description": "Filter to services with any one of these ids.", "required": false, "maximum": 100 },
            { "name": "limit", "type": "long", "default": 25, "minimum": 1, "maximum": 100 },
            { "name": "offset", "type": "long", "default": 0, "minimum": 0 },
            { "name": "sort", "type": "string", "default": "journal_timestamp" }
          ],
          "responses": {
            "200": { "type": "[service_version]" }
          }
        },

        {
          "method": "GET",
          "description": "Returns information about a specific service.",
          "path": "/:id",
          "responses": {
            "200": { "type": "service" }
          }
        },

        {
          "method": "POST",
          "description": "Create a new service.",
          "body": { "type": "service_form" },
          "responses": {
            "201": { "type": "service" },
            "401": { "type": "unit" },
            "422": { "type": "[io.flow.common.v0.models.error]" }
          }
        },

        {
          "method": "PUT",
          "path": "/:id",
          "description": "Upsert an service with the specified id.",
          "body": { "type": "service_put_form" },
          "responses": {
            "200": { "type": "service" },
            "201": { "type": "service" },
            "401": { "type": "unit" },
            "422": { "type": "[io.flow.common.v0.models.error]" }
          }
        },

        {
          "method": "DELETE",
          "description": "Delete the service with this id",
          "path": "/:id",
          "responses": {
            "204": { "type": "unit" },
            "401": { "type": "unit" },
            "404": { "type": "unit" },
            "422": { "type": "[io.flow.common.v0.models.error]" }
          }
        }
      ]          
    },

    "application": {
      "operations": [
        {
          "method": "GET",
          "description": "Search applications. Always paginated.",
          "parameters": [
            { "name": "id", "type": "[string]", "required": false, "maximum": 100 },
            { "name": "port", "type": "[long]", "required": false, "description": "Find the application assigned this external port number", "maximum": 100 },
            { "name": "service", "type": "[string]", "required": false, "maximum": 100 },
            { "name": "prefix", "type": "string", "required": false, "description": "Find the applications with this exact prefix (computed as the string up the last dash, of if no dash, the full string)" },
            { "name": "q", "type": "string", "required": false, "description": "Arbitrary query search. Case insensitive" },
            { "name": "limit", "type": "long", "default": 25, "minimum": 1, "maximum": 100 },
            { "name": "offset", "type": "long", "default": 0, "minimum": 0 },
            { "name": "sort", "type": "string", "default": "-created_at" }
          ],
          "responses": {
            "200": { "type": "[application]" }
          }
        },

        {
          "method": "GET",
          "description": "Provides visibility into recent changes of each application, including deletion",
          "path": "/versions",
          "parameters": [
            { "name": "id", "type": "[string]", "required": false, "maximum": 100 },
            { "name": "application", "type": "[string]", "description": "Filter to applications with any one of these ids.", "required": false, "maximum": 100 },
            { "name": "limit", "type": "long", "default": 25, "minimum": 1, "maximum": 100 },
            { "name": "offset", "type": "long", "default": 0, "minimum": 0 },
            { "name": "sort", "type": "string", "default": "journal_timestamp" }
          ],
          "responses": {
            "200": { "type": "[application_version]" }
          }
        },

        {
          "method": "GET",
          "description": "Returns YAML representation of applications.",
          "path": "/yaml",
          "responses": {
            "200": { "type": "string" },
            "401": { "type": "unit" }
          }
        },

        {
          "method": "GET",
          "description": "Returns information about a specific application.",
          "path": "/:id",
          "responses": {
            "200": { "type": "application" },
            "401": { "type": "unit" }
          }
        },

        {
          "method": "POST",
          "description": "Create a new application.",
          "body": { "type": "application_form" },
          "responses": {
            "201": { "type": "application" },
            "401": { "type": "unit" },
            "422": { "type": "[io.flow.common.v0.models.error]" }
          }
        },

        {
          "method": "PUT",
          "path": "/:id",
          "description": "Upsert an application with the specified id.",
          "body": { "type": "application_put_form" },
          "responses": {
            "200": { "type": "application" },
            "201": { "type": "application" },
            "401": { "type": "unit" },
            "422": { "type": "[io.flow.common.v0.models.error]" }
          }
        },

        {
          "method": "DELETE",
          "description": "Delete the application with this id",
          "path": "/:id",
          "responses": {
            "204": { "type": "unit" },
            "401": { "type": "unit" },
            "404": { "type": "unit" }
          }
        },

        {
          "method": "PUT",
          "path": "/:id/dependencies/:dependency",
          "description": "Ensure that name is a dependencies for this project, adding if necessary.",
          "responses": {
            "200": { "type": "application" },
            "401": { "type": "unit" },
            "404": { "type": "unit" },
            "422": { "type": "[io.flow.common.v0.models.error]" }
          }
        },

        {
          "method": "DELETE",
          "path": "/:id/dependencies/:dependency",
          "description": "Remove name as a dependencies for this project",
          "responses": {
            "200": { "type": "application" },
            "401": { "type": "unit" },
            "404": { "type": "unit" },
            "422": { "type": "[io.flow.common.v0.models.error]" }
          }
        }
        
      ]          
    }

  }
}

